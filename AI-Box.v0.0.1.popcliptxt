// #popclip
// name: AI-Box
// icon: iconify:simple-icons:openai
// identifier: candyknife.popclip.extension.ai-box
// description: "An on-the-go ChatGPT toolkit."
// language: javascript
// module: true
// entitlements: [network]
// options: [
//  {
//    identifier: apikey,
//    label: "API Key",
//    type: "string",
//    defaultValue: "",
//  },
//  {
//    identifier: domain,
//    label: "API Base Domain",
//    type: "string",
//    defaultValue: "https://api.openai.com/v1",
//  },
//  {
//    identifier: model,
//    label: "Model",
//    type: "multiple",
//    defaultValue: "gpt-4o-mini",
//    values: [
//      "gpt-4o-mini",
//      "gpt-4o",
//      "gpt-4-turbo",
//      "gpt-4",
//    ],
//  },
//  {
//    identifier: custommodel,
//    label: "Custom Model",
//    type: "string",
//  },
//  {
//    identifier: temperature,
//    label: "Temperature",
//    type: "string",
//    defaultValue: "1",
//  },
//  {
//    identifier: topP,
//    label: "Top P",
//    type: "string",
//    defaultValue: "0.95",
//  },
// ]

async function chat(input, options, prompt) {
  const openai = require("axios").create({
    baseURL: options.domain,
    headers: { Authorization: `Bearer ${options.apikey}` },
  });

  const { data } = await openai.post("/chat/completions", {
    model: options.custommodel || options.model,
    messages: [
      { role: "system", content: prompt },
      { role: "assistant", content: `Please provide your input text.` },
      { role: "user", content: `${input.text}` },
    ],
    temperature: parseFloat(options.temperature),
    top_p: parseFloat(options.topP),
  });
  const responseContent = data.choices[0].message.content.trim();

  if (popclip.modifiers.option) {
    popclip.pasteText(input.text + "\n\n" + responseContent);
  } else {
    popclip.share("com.apple.Notes.SharingExtension", [responseContent]);
  }
}

exports.actions = [
  {
    title: "Translate-zh",
    icon: "iconify:icon-park-outline:chinese",
    code: (input, options) =>
      chat(
        input,
        options,
        "Translate the input text into Chinese, ensuring accuracy and fluency. \
        Prioritize natural, idiomatic expressions in Chinese over literal translations.",
      ),
  },
  {
    title: "Translate-en",
    icon: "iconify:icon-park-outline:english",
    code: (input, options) =>
      chat(
        input,
        options,
        "Translate the input text into English, ensuring accuracy and fluency. \
        Prioritize natural, idiomatic expressions in English over literal translations.",
      ),
  },
  {
    title: "Summarize",
    icon: "iconify:material-symbols:sticky-note-2-outline",
    code: (input, options) =>
      chat(
        input,
        options,
        "Rewrite the input text into a 3-5 sentence summary. \
        Capture the main ideas and essential information. \
        Prioritize clarity and conciseness. \
        Avoid adding personal interpretations.",
      ),
  },
  {
    title: "Grammar",
    icon: "iconify:tabler:text-grammar",
    code: (input, options) =>
      chat(
        input,
        options,
        "Rephrase the input text to be clear and grammatically correct, preserving the original meaning. \
        Correct all spelling, punctuation, verb tense, word choice, and other grammatical errors. \
        Provide the rephrased text only.",
      ),
  },
  {
    title: "Polish",
    icon: "iconify:fluent:draw-text-20-filled",
    code: (input, options) =>
      chat(
        input,
        options,
        "Rewrite the input text to enhance clarity, conciseness, and flow. \
        Ensure a formal and professional style while preserving the original meaning. \
        Focus on sentence structure and word choice. \
        Provide the rewritten text only, suitable for business or academic use.",
      ),
  },
];
